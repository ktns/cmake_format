#
# Generated source bits for sphinx documentation
#
set(_stage ${CMAKE_CURRENT_BINARY_DIR}/stage)
set(_genbits)

add_custom_command(
  OUTPUT ${_stage}/bits/format-usage.txt
  COMMAND python -Bm cmake_format --help > ${_stage}/bits/format-usage.txt
  DEPENDS ../__main__.py #
          ../configuration.py #
          ../config_util.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/format-usage.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/annotate-usage.txt
  COMMAND python -Bm cmake_format.annotate --help >
          ${_stage}/bits/annotate-usage.txt
  DEPENDS ../__main__.py #
          ../annotate.py #
          ../configuration.py #
          ../config_util.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/annotate-usage.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/ctest-to-usage.txt
  COMMAND python -Bm cmake_format.ctest_to --help >
          ${_stage}/bits/ctest-to-usage.txt
  DEPENDS ../__main__.py #
          ../ctest_to.py #
          ../configuration.py #
          ../config_util.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/ctest-to-usage.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/lint-usage.txt
  COMMAND python -Bm cmake_lint --help > ${_stage}/bits/lint-usage.txt
  DEPENDS ../../cmake_lint/__main__.py #
          ../__main__.py #
          ../ctest_to.py #
          ../configuration.py #
          ../config_util.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/lint-usage.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/configbits.py
  COMMAND python -Bm cmake_format --dump-config > ${_stage}/bits/configbits.py
  DEPENDS ../__main__.py #
          ../configuration.py #
          ../config_util.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/configbits.py)

add_custom_command(
  OUTPUT ${_stage}/bits/lint-in.cmake
  COMMAND ${CMAKE_COMMAND} -E copy cmake_lint/test/expect_lint.cmake
          ${_stage}/bits/lint-in.cmake
  DEPENDS ${CMAKE_SOURCE_DIR}/cmake_lint/test/expect_lint.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/lint-in.cmake)

add_custom_command(
  OUTPUT ${_stage}/bits/lint-out.cmake
  COMMAND python -Bm cmake_lint cmake_lint/test/expect_lint.cmake >
          ${_stage}/bits/lint-out.cmake || echo "OK"
  DEPENDS ../../cmake_lint/__main__.py #
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/lint-out.cmake)

add_custom_command(
  OUTPUT ${_stage}/bits/dump-example-src.cmake
  COMMAND ${CMAKE_COMMAND} -E copy cmake_format/doc/bits/dump-example.cmake
          ${_stage}/bits/dump-example-src.cmake
  DEPENDS bits/dump-example.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/dump-example-src.cmake)

add_custom_command(
  OUTPUT ${_stage}/bits/dump-example-lex.txt
  COMMAND
    python -Bm cmake_format --dump lex ${_stage}/bits/dump-example-src.cmake >
    ${_stage}/bits/dump-example-lex.txt
  DEPENDS ../../cmake_format/__main__.py #
          ${_stage}/bits/dump-example-src.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/dump-example-lex.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/dump-example-parse.txt
  COMMAND
    python -Bm cmake_format --dump parse
    cmake_format/doc/bits/dump-example.cmake >
    ${_stage}/bits/dump-example-parse.txt
  DEPENDS ../../cmake_format/__main__.py #
          ${_stage}/bits/dump-example-src.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/dump-example-parse.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/dump-example-layout.txt
  COMMAND
    python -Bm cmake_format --dump layout
    cmake_format/doc/bits/dump-example.cmake >
    ${_stage}/bits/dump-example-layout.txt
  DEPENDS ../../cmake_format/__main__.py #
          ${_stage}/bits/dump-example-src.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/dump-example-layout.txt)

add_custom_command(
  OUTPUT ${_stage}/bits/example-in.cmake
  COMMAND ${CMAKE_COMMAND} -E copy cmake_format/test/test_in.cmake
          ${_stage}/bits/example-in.cmake
  DEPENDS ../test/test_in.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/example-in.cmake)

add_custom_command(
  OUTPUT ${_stage}/bits/example-out.cmake
  COMMAND ${CMAKE_COMMAND} -E copy cmake_format/test/test_out.cmake
          ${_stage}/bits/example-out.cmake
  DEPENDS ../test/test_out.cmake
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/example-out.cmake)

add_custom_command(
  OUTPUT ${_stage}/bits/lintimpl-table.rst
  COMMAND python -Bm cmake_lint.gendocs table >
          ${_stage}/bits/lintimpl-table.rst
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/lintimpl-table.rst)

add_custom_command(
  OUTPUT ${_stage}/bits/features.rst
  COMMAND tail -n +5 cmake_format/doc/format-features.rst >
          ${_stage}/bits/features.rst
  DEPENDS format-features.rst
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/bits/features.rst)

add_custom_command(
  OUTPUT ${_stage}/lint-implemented.rst
  COMMAND python -Bm cmake_lint.gendocs reference >
          ${_stage}/lint-implemented.rst
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/lint-implemented.rst)

add_custom_command(
  OUTPUT ${_stage}/example_rendered.html
  COMMAND python -Bm cmake_format.annotate --format iframe
          cmake_format/test/test_out.cmake > ${_stage}/example_rendered.html
  DEPENDS ../annotate.py
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
list(APPEND _genbits ${_stage}/example_rendered.html)

# TODO(josh): remove this iteration for just one file.
set(_genfiles)
set(_insource_genfiles README.rst)
foreach(_genfile ${_insource_genfiles})
  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/${_genfile}
    COMMAND
      python -Bm cmake_format.doc.gendoc --bits ${_stage}/bits
      ${CMAKE_CURRENT_SOURCE_DIR}/${_genfile}
      # TODO(josh): not every file depends on every bit, so this is overkill,
      # but whatever... it's fine for now. We'll need more complicated code if
      # we want to actually declare which bits each file depends on.
    DEPENDS ${_genbits} gendoc.py
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
  list(APPEND _genfiles ${CMAKE_CURRENT_SOURCE_DIR}/${_genfile})

  add_test(
    NAME cmake_format-doc-verify-${_genfile}
    COMMAND python -Bm cmake_format.doc.gendoc --verify --bits ${_stage}/bits
            ${CMAKE_CURRENT_SOURCE_DIR}/${_genfile}
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
endforeach()
add_custom_target(genfiles-cmake_format DEPENDS ${_genfiles})
add_dependencies(gen genfiles-cmake_format)

# copy sourcefiles from the sourcetree into the build tree so that they're all
# accessible from one tree
set(_copyfiles)
set(_docsources
    .readthedocs.yml
    bits/dump-example.cmake
    changelog.rst
    cmake-annotate.rst
    cmake-format.rst
    cmake-lint.rst
    configopts.rst
    configuration.rst
    conf.py
    contributing.rst
    ctest-to.rst
    custom_parsers.rst
    format-algorithm.rst
    format-case_studies.rst
    format-example.rst
    format-features.rst
    format-usage.rst
    index.rst
    installation.rst
    lint-example.rst
    lint-summary.rst
    lint-usage.rst
    modules.rst
    parse-algorithm.rst
    parse-automatic.rst
    parse-tree.rst
    release_notes.rst)
foreach(_docsource ${_docsources})
  add_custom_command(
    OUTPUT ${_stage}/${_docsource}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/${_docsource}
            ${_stage}/${_docsource})
  list(APPEND _copyfiles ${_stage}/${_docsource})
endforeach()

# For the subproject build, also copy some of the common files into the build
# tree.
add_custom_command(
  OUTPUT ${_stage}/conf_common.py
  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/doc/conf.py
          ${_stage}/conf_common.py)
list(APPEND _copyfiles ${_stage}/conf_common.py)

add_custom_command(
  OUTPUT ${_stage}/sphinx-static/css/cheshire_theme.css
  COMMAND
    ${CMAKE_COMMAND} -E copy
    ${CMAKE_SOURCE_DIR}/doc/sphinx-static/css/cheshire_theme.css
    ${_stage}/sphinx-static/css/cheshire_theme.css)
list(APPEND _copyfiles ${_stage}/sphinx-static/css/cheshire_theme.css)

set(_sphinx_manifest ${_genbits} ${_copyfiles})

# A list of files that should be exported to the read-the-docs repository. This
# is used to clean the directory prior to export
set(_rtd_manifest ${_sphinx_manifest} README.rst .gitignore .readthedocs.yml)
list(SORT _sphinx_manifest)
string(REPLACE ";" "\n" _manifest_text "${_sphinx_manifest}")
file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/MANIFEST "${_manifest_text}\n")

add_custom_target(
  clean-sphinx-stage
  DEPENDS ${_sphinx_manifest} ${CMAKE_CURRENT_BINARY_DIR}/MANIFEST
  COMMAND python -Bm tangent.tooling.clean_stage
          ${CMAKE_CURRENT_BINARY_DIR}/MANIFEST ${_stage}
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  COMMENT "Cleaning cmake_format/doc/stage")

add_custom_command(
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/html/index.html
  COMMAND env PYTHONPATH=${CMAKE_SOURCE_DIR} sphinx-build -M html ${_stage}
          ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND touch ${CMAKE_CURRENT_BINARY_DIR}/html/index.html
  DEPENDS clean-sphinx-stage ${_sphinx_manifest}
          ${CMAKE_CURRENT_BINARY_DIR}/MANIFEST
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  COMMENT "Building sphinx documentation for cmake_format")

add_custom_target(doc-cmake_format
                  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/html/index.html)

add_custom_target(
  showdoc-cmake_format
  COMMAND xdg-open ${CMAKE_CURRENT_BINARY_DIR}/html/index.html
  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/html/index.html)

add_dependencies(doc doc-cmake_format)
set_property(GLOBAL APPEND PROPERTY global_doc_files ${_sphinx_manifest})

set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES
                                       ${_copyfiles} ${_genbits})

if(IS_TRAVIS_CI)
  if(NOT $ENV{TRAVIS_PULL_REQUEST} STREQUAL "true")
    add_custom_command(
      OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cmake-tools-rtd.deploy_key
      COMMAND
        openssl aes-256-cbc #
        -K $encrypted_4bf912706780_key #
        -iv $encrypted_4bf912706780_iv #
        -in
        ${CMAKE_SOURCE_DIR}/tangent/tooling/deploy_keys/cmake-tools-rtd.enc #
        -out ${CMAKE_CURRENT_BINARY_DIR}/cmake-tools-rtd.deploy_key #
        -d
      WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

    if($ENV{TRAVIS_TAG} AND NOT "$ENV{TRAVIS_TAG}" STREQUAL "")
      set(_branch_or_tag --tag $ENV{TRAVIS_TAG})
    else()
      set(_branch_or_tag --branch $ENV{TRAVIS_BRANCH})
    endif()

    add_custom_target(
      push-rtd-repo
      COMMAND
        python -Bm tangent.tooling.sync_doc_artifacts #
        --repo-dir ${_stage} #
        --doc-repo git@github.com:cheshiresoft/cmake-tools-rtd.git #
        --deploy-key ${CMAKE_CURRENT_BINARY_DIR}/cmake-tools-rtd.deploy_key
        ${_branch_or_tag}
      DEPENDS clean-sphinx-stage ${_sphinx_manifest}
              ${CMAKE_CURRENT_BINARY_DIR}/cmake-tools-rtd.deploy_key
      WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
    add_dependencies(travis-ci push-rtd-repo)
  endif()
endif()
